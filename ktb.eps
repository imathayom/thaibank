%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 1
%%Creator: CorelDRAW 12
%%Title: 002.eps
%%CreationDate: Mon Jan 17 08:51:57 2005
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE Blue 072 CVC)
%%CMYKCustomColor: 1 0.79 0 0 (PANTONE Blue 072 CVC)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 12.154
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
16.25754 16.25754 176.49808 176.49836 @E
 0 O 0 @g
1.00 0.79 0.00 0.00 (PANTONE Blue 072 CVC) 1.00 x
/$fm 0 def
176.49808 96.38022 m
176.49808 52.13565 140.62762 16.25754 96.36917 16.25754 C
52.12715 16.25754 16.25754 52.13565 16.25754 96.38022 C
16.25754 140.63017 52.12715 176.49836 96.36917 176.49836 C
140.62762 176.49836 176.49808 140.63017 176.49808 96.38022 C
@c
F

@rax %Note: Object
31.58334 35.03395 161.12466 157.69729 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
152.15754 124.31820 m
152.15754 124.31820 156.13654 124.60649 151.75672 129.09288 C
151.75672 129.09288 144.47537 136.98340 130.50709 142.95855 C
123.01965 146.16312 114.60246 144.82913 115.38879 137.08403 C
115.94239 131.64548 110.45962 129.56683 106.14359 130.06488 C
101.07751 130.65080 98.03225 134.49033 98.83389 137.64983 C
99.69137 141.01994 101.61269 143.63291 104.45896 145.66110 C
106.38822 147.03732 107.73411 148.00932 111.25077 148.68283 C
113.38753 149.09272 116.18901 149.73080 116.93735 147.48661 C
118.40570 148.20406 121.00762 152.70831 112.55272 152.78939 C
112.55272 152.78939 111.28819 155.31704 108.44504 154.79008 C
108.44504 154.79008 100.03266 162.41443 90.68003 152.97307 C
90.68003 152.97307 87.00803 151.63115 86.80677 152.92687 C
87.63874 152.31827 88.99569 154.16561 87.14154 154.80170 C
86.27046 155.10274 85.25707 154.25802 85.09918 153.43852 C
84.97417 152.80554 85.17288 151.41203 87.02702 151.14472 C
87.51572 151.07471 88.39644 151.14472 88.39644 151.14472 C
87.78274 150.47461 L
84.98778 149.36655 82.26907 150.22460 81.76252 152.06513 C
82.41704 151.71364 83.12967 152.15074 83.35899 152.82822 C
83.58888 153.51137 83.05228 154.46041 81.96548 154.60724 C
80.45036 154.81644 79.73065 153.18142 80.05521 151.74369 C
80.55213 149.53380 82.95987 147.96085 86.03943 148.34154 C
85.50510 147.59830 L
85.50510 147.59830 82.41789 144.02041 79.89591 139.95524 C
77.33083 135.82517 66.88431 131.27046 68.67241 141.10724 C
69.24217 144.23357 63.59868 147.98268 53.79704 141.74504 C
48.56088 138.41121 42.13191 133.41260 37.37395 125.32025 C
37.37395 125.32025 35.23266 122.22624 38.75102 122.12844 C
38.75102 122.12844 30.70828 114.13247 31.66044 104.61061 C
31.66044 104.61061 32.37647 101.99339 34.28022 103.65761 C
34.28022 103.65761 31.18649 95.32800 33.08939 88.18696 C
33.08939 88.18696 34.04154 84.13965 36.42265 86.28265 C
36.42265 86.28265 38.55543 76.17458 43.08435 67.71742 C
46.65628 61.05146 53.32025 51.29121 50.70331 48.90898 C
48.10876 46.55367 44.44611 51.24643 45.01871 49.35543 C
46.22967 45.35688 50.67184 44.77124 53.08129 46.53099 C
59.27187 51.05282 50.15565 61.95061 47.37090 75.80806 C
47.37090 75.80806 49.27294 76.04646 48.49994 80.54164 C
48.49994 80.54164 53.08129 78.90378 52.27880 87.90350 C
52.27880 87.90350 57.12860 85.32907 57.12860 91.51852 C
57.12860 91.51852 62.12608 90.32882 63.07767 96.99364 C
63.07767 96.99364 71.23380 95.80989 73.07546 100.32718 C
73.07546 100.32718 75.21676 97.70854 79.23146 101.90239 C
80.22869 99.03770 82.25490 96.45534 84.90869 94.27039 C
84.90869 94.27039 84.38088 90.24690 79.60365 88.85282 C
79.60365 88.85282 73.76457 91.14690 67.45861 88.85282 C
61.64589 86.74157 63.98220 80.94869 68.20101 82.33427 C
66.92230 82.97291 66.55011 84.88800 68.61628 85.30016 C
70.68019 83.73005 72.91134 84.63855 73.98595 86.04198 C
73.98595 86.04198 78.11972 83.15263 80.84551 86.12589 C
82.16702 86.04454 82.98737 84.18671 81.17348 83.31817 C
84.69836 82.61036 85.96772 86.04198 84.51043 87.90350 C
84.51043 87.90350 85.33531 88.40211 86.27046 89.12381 C
86.27046 89.12381 87.37342 90.11991 88.20000 91.28665 C
88.20000 91.28665 91.67046 88.74482 98.10113 87.31956 C
98.10113 87.31956 94.74208 82.16249 89.76869 81.16838 C
89.76869 81.16838 82.71099 83.30003 77.94709 80.54164 C
77.94709 80.54164 75.38202 79.30233 75.78085 76.67093 C
76.07962 74.69631 77.77446 73.31924 80.32706 73.63899 C
79.29071 74.11465 76.99833 76.50680 79.91178 77.53351 C
81.83650 74.72183 86.94879 76.74831 87.49474 77.55392 C
88.47354 76.56265 92.75641 76.96488 93.32617 78.44740 C
94.69672 78.67474 96.69487 78.04885 95.95304 75.59320 C
97.61102 75.81969 100.29345 78.61890 96.35272 80.84409 C
96.35272 80.84409 98.69272 81.91219 100.56841 83.46671 C
103.41071 86.11313 L
103.41071 86.11313 106.81285 87.40318 106.75446 83.49477 C
109.41477 83.80885 111.62268 81.54539 111.08665 79.06195 C
111.08665 79.06195 109.93408 76.21909 105.80003 76.95694 C
101.66769 77.69764 101.74394 74.36920 104.80535 74.17332 C
102.78085 73.60724 101.41965 70.01263 108.18567 69.99647 C
108.18567 69.99647 109.67953 61.83128 100.59392 62.65672 C
99.51732 62.90504 99.68287 63.89773 99.80731 64.68293 C
101.29209 65.17757 101.45991 66.66491 100.75805 67.36904 C
100.00290 68.12050 98.34917 68.49836 97.08236 67.16268 C
96.29943 66.33411 96.01654 64.72205 96.25946 63.10658 C
94.77354 63.50939 93.98098 64.13159 93.98098 65.30372 C
95.71635 66.04526 94.47846 69.14466 91.62964 68.02894 C
90.47480 67.57739 89.62469 66.19550 90.14088 63.93969 C
90.83452 60.90491 94.98869 59.58567 98.31090 59.20639 C
100.29855 57.45572 103.31546 55.60016 110.37203 56.66287 C
110.37203 56.66287 107.24287 41.50148 86.46491 42.16309 C
86.46491 42.16309 78.38986 45.03458 80.84551 51.29461 C
81.33279 52.54016 83.01402 54.71858 84.70800 54.67266 C
84.70800 54.67266 87.53754 53.74176 87.53754 56.13080 C
87.53754 56.13080 87.31417 57.87298 85.50510 58.05496 C
83.69461 58.23666 79.35676 57.86419 77.37250 52.41203 C
76.48299 49.96006 76.67036 45.95839 79.09597 43.18951 C
71.24315 45.11877 65.32753 50.62932 67.70608 58.11222 C
68.99102 62.14791 74.77030 66.04526 79.35676 63.31861 C
79.23458 61.45965 80.10113 59.97061 82.20813 59.97061 C
83.98176 59.97061 84.93534 61.58324 84.56230 63.56523 C
84.22923 65.34028 81.70299 67.79509 77.37250 68.02894 C
72.78803 68.27726 64.25405 65.69150 63.61682 56.13080 C
63.02891 47.27537 69.07975 40.89430 84.11641 38.91713 C
84.31143 38.75528 L
84.31143 38.75528 93.46252 32.78154 106.39786 35.96910 C
106.39786 35.96910 132.45902 40.94391 126.88724 68.40170 C
126.88724 68.40170 133.26208 86.33849 119.48428 96.75723 C
119.48428 96.75723 119.16794 99.31578 121.15106 97.23203 C
122.33225 95.66504 127.09956 94.85206 127.09956 98.18249 C
127.09956 98.18249 131.62564 94.13830 133.25669 98.25080 C
133.25669 98.25080 134.95408 93.42283 138.42652 96.65887 C
138.42652 96.65887 137.57131 92.94718 139.23808 90.80447 C
140.90485 88.66290 144.00085 89.29672 144.00085 89.29672 C
144.00085 89.29672 139.23808 76.52211 144.95102 76.04646 C
144.95102 76.04646 130.67121 47.48258 138.94044 43.86898 C
141.81080 42.61493 145.16504 43.22778 146.87093 46.59591 C
148.28230 49.38746 143.76274 43.91263 141.14438 46.29175 C
138.02683 49.12384 141.86041 56.05115 145.66507 63.19247 C
150.90718 73.02444 154.47600 80.25676 155.18580 85.09153 C
155.18580 85.09153 158.30589 83.04321 159.25890 90.42293 C
160.02000 96.32551 159.11546 100.43206 158.51594 104.61061 C
158.51594 104.61061 162.56211 101.99339 160.57843 111.24652 C
160.57843 111.24652 159.12142 117.94961 152.15754 124.31820 C
@c
101.76520 154.06724 m
102.05433 154.02898 102.32787 153.95443 102.58611 153.85521 C
102.63685 153.76876 102.66633 153.67323 102.66633 153.56636 C
102.66633 153.24009 102.40271 152.97137 102.07474 152.97137 C
101.75046 152.97137 101.48315 153.24009 101.48315 153.56636 C
101.48315 153.77839 101.59767 153.96009 101.76520 154.06724 C
@c
100.68038 154.01480 m
100.67754 153.99950 100.67046 153.98504 100.67046 153.96973 C
100.57691 153.17320 101.14469 152.45206 101.94123 152.35824 C
102.64592 152.27631 103.29222 152.71540 103.49348 153.37616 C
103.89657 153.10715 104.23786 152.80753 104.50630 152.57083 C
102.96765 152.54901 102.71594 151.82957 101.38989 152.07761 C
100.71723 152.20375 100.00290 152.90674 99.96406 153.78661 C
100.24271 153.91247 100.33370 153.94507 100.68038 154.01480 C
@c
121.52806 62.16973 m
121.52806 62.16973 122.28491 63.41669 122.68602 61.62633 C
122.68602 61.62633 123.48737 51.97663 117.32400 46.07943 C
113.21320 42.14891 103.74151 36.52753 92.99820 38.98063 C
92.99820 38.98063 110.14384 40.07622 114.52507 55.79518 C
115.00696 57.56598 L
115.00696 57.56598 119.32668 58.55839 121.52806 62.16973 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
